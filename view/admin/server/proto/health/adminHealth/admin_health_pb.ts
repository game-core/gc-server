// ヘルスチェック

// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file health/adminHealth/admin_health.proto (package api.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { AdminHealthEnum } from "./admin_health_enum_pb.js";

/**
 * @generated from message api.admin.AdminHealth
 */
export class AdminHealth extends Message<AdminHealth> {
  /**
   * @generated from field: int64 health_id = 1;
   */
  healthId = protoInt64.zero;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: api.admin.AdminHealthEnum admin_health_enum = 3;
   */
  adminHealthEnum = AdminHealthEnum.AdminNone;

  constructor(data?: PartialMessage<AdminHealth>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.admin.AdminHealth";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "health_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 3,
      name: "admin_health_enum",
      kind: "enum",
      T: proto3.getEnumType(AdminHealthEnum),
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): AdminHealth {
    return new AdminHealth().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): AdminHealth {
    return new AdminHealth().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): AdminHealth {
    return new AdminHealth().fromJsonString(jsonString, options);
  }

  static equals(
    a: AdminHealth | PlainMessage<AdminHealth> | undefined,
    b: AdminHealth | PlainMessage<AdminHealth> | undefined
  ): boolean {
    return proto3.util.equals(AdminHealth, a, b);
  }
}
