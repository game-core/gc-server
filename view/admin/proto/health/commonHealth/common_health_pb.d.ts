// ヘルスチェック

// @generated by protoc-gen-es v1.10.0
// @generated from file health/commonHealth/common_health.proto (package api.game, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { CommonHealthType } from "./common_health_type_enum_pb.js";

/**
 * @generated from message api.game.CommonHealth
 */
export declare class CommonHealth extends Message<CommonHealth> {
  /**
   * @generated from field: int64 health_id = 1;
   */
  healthId: bigint;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: api.game.CommonHealthType common_health_type = 3;
   */
  commonHealthType: CommonHealthType;

  constructor(data?: PartialMessage<CommonHealth>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.game.CommonHealth";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommonHealth;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommonHealth;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommonHealth;

  static equals(a: CommonHealth | PlainMessage<CommonHealth> | undefined, b: CommonHealth | PlainMessage<CommonHealth> | undefined): boolean;
}

